Chad Toomer
Fall 2022
Software Engineering
Assignment #3
Code Review
The Boggle solver's goal is to offer a list of probable words given a dictionary and a Boggle board. 
The dictionary is a collection of legitimate phrases that the Boggle solver will look for when searching the Boggle board. There are several approaches to this problem. My colleague, Yasmin Senior chose to use a hash map and began developing her Boggle solver.
Yasmin Senior code is very tidy. It is readable, with descriptive variables and function names that explain their functions. Before beginning to solve a Boggle board, be certain that the board is legitimate. An incorrect grid has Qs without Us or Ss without Ts. Yasmin's method, of hers, boggle solver.js, checks for valid boards. The method looks for solitary S's and Q's and returns false if they are found. A valid grid is also N x N. Her code also checks to see if the board is N x N.If the grid is faulty,her for loop verifies that each row is as long as the columns and returns an empty Solutions list. Yasmin may produce a print statement to warn the user that the board is invalid to enhance this section of the code. The returned solutions list may be deceptive with the present settings.
Once the grid has been validated, the developer should change both the dictionary and the grid to lowercase. This is for your convenience later on in the program. Ensure that all strings in the board and dictionary are in the same case to avoid issues later in the code. Yasmins function successfully converts both the grid and the dictionary to a single case. Herattention to detail is evident in this stage. It is critical that they anticipated the issues that may develop if the board and dictionary were not in the same case.
Yasmin creates a set of solutions and a hash map for the dictionary in order to discover the solutions in the Boggle board. Her program iterates across the N x N grid, populating the solution set using their function findWords. She organizes her code well by making effective use of the existing comments. This is significant because other developers will be able to comprehend her code even if they are unfamiliar with it. The usage of descriptive function and variable names also aids in the understanding of their code by other developers. I do not think there is much code to improve on here as far as formatting goes. They do an outstanding job with this across all the lines of code.
Yasmin employs several tiny assistance functions. The auxiliary functions, which are used to augment find Words, also contribute to code clarity. She also assists me as a developer since if a helper function fails, she knows precisely where in the code to focus on debugging. This is advantageous to the developer since it allows them to spend more time debugging rather than hunting for faults.
Finally, Yasmin excels in writing clean, simple, and understandable code. This is made feasible by her usage of pre-existing comments, descriptive variables, and function names. Yasmin might enhance her code by printing an error notice when the grid becomes incorrect. Her testing should also be improved. While the testing document contains solid coding principles from boggle-solver.js, She might create tests to demonstrate that the solver works for grids of various sizes. Otherwise, the check for incorrect grids suffices. As well as constructed and tested the boggler solver successfully.

Assignment 3 
https://github.com/yasminsenior02/Software-Eng/tree/main/Assignment3
Full doc link: https://docs.google.com/document/d/1DUcdu0RGb6EV2mkDbQe1o5hjPAc1wS3DJQVnaDS9PAc/edit?usp=sharing
